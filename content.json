{"meta":{"title":"www.keithwechsler.com","subtitle":"Thoughts from Keith Wechsler...","description":"Personal blog of Keith Wechsler, a software engineer located in Ashland, KY...","author":"Keith Wechsler","url":"http://www.keithwechsler.com"},"pages":[{"title":"About","date":"2015-11-17T05:50:37.000Z","updated":"2017-11-09T03:55:14.625Z","comments":false,"path":"about/index.html","permalink":"http://www.keithwechsler.com/about/index.html","excerpt":"","text":"My name is Keith Wechsler. I am a 35-year career veteran of the railroad industry and worked most recently as a software engineer in Jacksonville, FL. My day job consisted of maintaining and enhancing a 1500-user, on-premise Microsoft Dynamics CRM system with a team of other developers and business analysts. I am currently looking for a new challenge where I can apply my skills and develop new ones. If you are looking for a software engineer, please consider my resume. NOTICEThe postings on this site are my own and do not necessarily represent any other party’s positions, strategies or opinions."},{"title":"Categories","date":"2017-11-09T03:55:14.625Z","updated":"2017-11-09T03:55:14.625Z","comments":true,"path":"categories/index.html","permalink":"http://www.keithwechsler.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-11-09T03:55:14.633Z","updated":"2017-11-09T03:55:14.633Z","comments":true,"path":"tags/index.html","permalink":"http://www.keithwechsler.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Backup a Raspberry Pi","slug":"Backup-A-Raspberry_Pi","date":"2018-01-06T15:45:00.000Z","updated":"2018-01-06T17:51:37.434Z","comments":true,"path":"2018/01/06/Backup-A-Raspberry_Pi/","link":"","permalink":"http://www.keithwechsler.com/2018/01/06/Backup-A-Raspberry_Pi/","excerpt":"","text":"I’ve started using a Raspberry Pi 3 to learn some Python development and using Node-Red to connect services. I want to be able to backup the files from the SD card because I don’t want to lose the configure and startup files and have to start from scratch if something goes awry. The easiest process that I found was to load the SD card into my MacBook, which has a SD slot, and just copy the image. After inserting the card, you need to determine the name of the drive to be backed up. From a bash prompt, use the diskutil utility to list the drives in your machine. 1diskutil list 1sudo dd if=/dev/rdisk2 of=raspbian.stretch.setup bs=1m","categories":[{"name":"Utilites","slug":"Utilites","permalink":"http://www.keithwechsler.com/categories/Utilites/"}],"tags":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"http://www.keithwechsler.com/tags/Raspberry-Pi/"}]},{"title":"JavaScript30","slug":"JavaScript30","date":"2016-12-09T04:02:06.000Z","updated":"2017-11-09T03:55:14.625Z","comments":true,"path":"2016/12/08/JavaScript30/","link":"","permalink":"http://www.keithwechsler.com/2016/12/08/JavaScript30/","excerpt":"","text":"I just completed the first project in the #JavaScript30 training course offered by Wes Bos. He provides free access to 30 videos, starter files, and assets to “build 30 things in 30 days with 30 tutorials” using nothing but plain JavaScript. In the first project, he walks you through building a “drum kit” in your browser. Since most of my HTML/JavaScript experience is with line of business apps in a corporate setting, I had never used the audio HTML tag before. I enjoyed Wes’ presentation style and he may very well end up with another paying customer for his other courses. The “drum kit” was a fun project and I’m looking forward to working on the other 29. Wonder what’s next???","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Web Development","slug":"Web-Development","permalink":"http://www.keithwechsler.com/tags/Web-Development/"}]},{"title":"Hosting a Static Site on Github","slug":"Hosting-a-Static-Site-on-Github","date":"2016-12-07T04:40:17.000Z","updated":"2017-11-09T03:55:14.624Z","comments":true,"path":"2016/12/06/Hosting-a-Static-Site-on-Github/","link":"","permalink":"http://www.keithwechsler.com/2016/12/06/Hosting-a-Static-Site-on-Github/","excerpt":"I was talking with a friend today about working on my blog this weekend and how it was hosted on Github using Github Pages. I told him that I would send him an e-mail with info on how to setup a site and I decided instead to create this post to document the steps I took. Hopefully it may help others who are attempting to do the same thing.","text":"I was talking with a friend today about working on my blog this weekend and how it was hosted on Github using Github Pages. I told him that I would send him an e-mail with info on how to setup a site and I decided instead to create this post to document the steps I took. Hopefully it may help others who are attempting to do the same thing. Github SetupThe first step in the process is to create a repository in your Github account that matches the following format: username.github.io. In my case, the repo needed to be named kwechsler.github.io since my username is kwechsler. Within the repo’s Settings, you’ll need to indicate your custom domain: Once you have the repository created, clone it and copy it to your PC. The first file you’ll want to add to the repo is a CNAME file with your registered name. The filename must be in all caps and spelled exactly like it is here. This is a listing from my blog’s repo where you can see the CNAME file in the root of the project: Inside the CNAME file, you need to list your domain. You can see that I have the fully qualified domain name of http://www.keithwechsler.com. The Github Pages documentation mentions having only the bare domain or subdomain, but mine is working with the full URL: You may also want to include a simple index.html HTML file so that once the configuration is complete, you’ll have a page to display some data. I recommend that this file display “Hello World!”. ;-) Push these changes back to Github. DNS ConfigurationAfter you have your configuration specified on Github, you’ll need to update the information on your DNS records. I registered keithwechsler.com on Namecheap, so I went to the maintenance section of their site and updated the ‘A’ records with Github’s IP addresses and entered a www subdomain that points to the kwechsler.github.io repo - you’ll use the one that you created on your DNS provider’s site: It has been a year since I’ve made any changes to this configuration, but I believe that this is all you need to get started. It takes some time for the DNS changes to propagate through the DNS system, but once that is complete, you are ready to start hosting some content. If you are going to write a blog, and you want to generate a static site based on Markdown files, I suggest you check out Hexo. Good luck!","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Web Development","slug":"Web-Development","permalink":"http://www.keithwechsler.com/tags/Web-Development/"}]},{"title":"Re-creating a Hexo Web Site","slug":"Re-creating-a-Hexo-Web-Site","date":"2016-12-03T22:22:10.000Z","updated":"2017-11-09T03:55:14.625Z","comments":true,"path":"2016/12/03/Re-creating-a-Hexo-Web-Site/","link":"","permalink":"http://www.keithwechsler.com/2016/12/03/Re-creating-a-Hexo-Web-Site/","excerpt":"I recently discovered that the files I need to create a post on this site had been lost. Not only that, but pulling down the repo from my bitbucket repo didn’t help. Some of the critical files were not stored in the repo. So, I’ve spent most of this weekend recreating the site and I took notes of the process and included some documentation to help with maintaining a Hexo site.","text":"I recently discovered that the files I need to create a post on this site had been lost. Not only that, but pulling down the repo from my bitbucket repo didn’t help. Some of the critical files were not stored in the repo. So, I’ve spent most of this weekend recreating the site and I took notes of the process and included some documentation to help with maintaining a Hexo site. To create this site, I installed the latest version of Hexo CLI on my Mac and created a new site: 1hexo init keithwechsler.com I then downloaded the latest Icarus theme and placed it in the themes folder of the new site. I then took remnants of the _config.yml files for the site and the theme from files I rescued from my old Mac and began editing the files until they displayed a site. The configuration items had changed since I had originally created the blog, so I reviewed the example _config.yml files and made changes that I thought would make a difference. I then installed the npm modules and started the server which comes up on http://0.0.0.0:4000: 12yarn installhexo server The most frustrating part of the setup was that I could not get the Tags and Categories pages to generate; each call to one of those pages produced an error. The Icarus theme documentation points out that you need to copy the tags and categories folders from the _source directory into your source directory, but I was copying them to the wrong destination. They need to be placed in the site source directory outside of the theme folder structure. I then re-read through the Hexo documentation and discovered that I needed to install the hexo-generator-feed module and then everything worked fine. To enable the new Insight search feature, I needed to install the hexo-generator-json-content module: 1yarn add hexo-generator-json-content The final thing to trip me up was producing an atom-based RSS feed. I discovered that I needed to add the hexo-generator-feed module: 1yarn add hexo-generator-feed Once I had my environment re-created, I needed to be able to deploy the site to Github. I had to install another module, hexo-deployer-git and execute the command: 12yarn add hexo-deployer-githexo generate -deploy One thing you need to be careful about, if you decide to use these notes to setup a Hexo blog, is the .gitignore files and how the theme’s .git files will be handled. The reason I had to re-create my environment from scratch was because I had inadvertently deleted my themes folder which had been added to my blog repo as a submodule. There is also a .gitignore file in the theme repo that says to ignore the _config.yml file which means that your repo does not have all of your configurations. That’s why I’ve decided to not try and maintain the two repos seperately and will probably need to perform the same steps in the future when Hexo or the theme is updated. Now that I have an environment where I can produce new posts, I’m hopeful to begin blogging in earnest. I know that I’ve said this before, I became bogged down about what I should post. My approach going forward is to just write about what I’m learning and let the curation of the posts coming later. Maintaining the SiteLinks to help with maintaining a Hexo blog: Command-line commands Writing posts/pages Tag Plugins for posts","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Web Development","slug":"Web-Development","permalink":"http://www.keithwechsler.com/tags/Web-Development/"}]},{"title":"Controlling LEDs From a Raspberry Pi","slug":"Controlling-LEDs-From-A-Raspberry-Pi","date":"2016-03-09T02:45:00.000Z","updated":"2017-11-09T03:55:14.624Z","comments":true,"path":"2016/03/08/Controlling-LEDs-From-A-Raspberry-Pi/","link":"","permalink":"http://www.keithwechsler.com/2016/03/08/Controlling-LEDs-From-A-Raspberry-Pi/","excerpt":"A friend of ours called and asked my wife, Debbie, if we had a Raspberry Pi and knew how to use it. Her son had a project due for school and needed to control about 20 LEDs - sequencing when they were on and off. I had all of the hardware because I had played around with an Arduino and had bought some electronics parts that would be needed - breadboard, LEDs, resistors, and wires. I had also purchased a Pi Cobbler Plus Breakout board to simplify connecting the Pi. The only thing I had really done with the Pi to this point was copying the Raspian OS to an microSD memory card and booting the Pi. Time for me to learn some Python and put the Pi to work.","text":"A friend of ours called and asked my wife, Debbie, if we had a Raspberry Pi and knew how to use it. Her son had a project due for school and needed to control about 20 LEDs - sequencing when they were on and off. I had all of the hardware because I had played around with an Arduino and had bought some electronics parts that would be needed - breadboard, LEDs, resistors, and wires. I had also purchased a Pi Cobbler Plus Breakout board to simplify connecting the Pi. The only thing I had really done with the Pi to this point was copying the Raspian OS to an microSD memory card and booting the Pi. Time for me to learn some Python and put the Pi to work. I had never written any code in Python, so I went to the web to find some examples. A friend from work had also sent me an e-mail with a couple of short routines to turn an LED on and off. The project was to have a map of Europe and indicate different areas where battles were occuring during World War I. The goal was to have the display to remain lit for an amount of time to indicate the duration of the battle. I was able to spend a few minutes and came up with the following code: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091#!/usr/bin/python import timeimport RPi.GPIO as GPIOGPIO.setmode(GPIO.BCM)GPIO.setwarnings(False)FIGHTING = GPIO.HIGHOVER = GPIO.LOWBATTLE01 = 4BATTLE02 = 17BATTLE03 = 22BATTLE04 = 10BATTLE05 = 9BATTLE06 = 11BATTLE07 = 5BATTLE08 = 6GPIO.setup(BATTLE01,GPIO.OUT)GPIO.setup(BATTLE02,GPIO.OUT)GPIO.setup(BATTLE03,GPIO.OUT)GPIO.setup(BATTLE04,GPIO.OUT)GPIO.setup(BATTLE05,GPIO.OUT)GPIO.setup(BATTLE06,GPIO.OUT)GPIO.setup(BATTLE07,GPIO.OUT)GPIO.setup(BATTLE08,GPIO.OUT)print(&quot;Lights test&quot;)GPIO.setup(BATTLE01,GPIO.FIGHTING)GPIO.setup(BATTLE02,GPIO.FIGHTING)GPIO.setup(BATTLE03,GPIO.FIGHTING)GPIO.setup(BATTLE04,GPIO.FIGHTING)GPIO.setup(BATTLE05,GPIO.FIGHTING)GPIO.setup(BATTLE06,GPIO.FIGHTING)GPIO.setup(BATTLE07,GPIO.FIGHTING)GPIO.setup(BATTLE08,GPIO.FIGHTING)time.sleep(3)print(&quot;Lights off&quot;)GPIO.setup(BATTLE01,GPIO.OVER)GPIO.setup(BATTLE02,GPIO.OVER)GPIO.setup(BATTLE03,GPIO.OVER)GPIO.setup(BATTLE04,GPIO.OVER)GPIO.setup(BATTLE05,GPIO.OVER)GPIO.setup(BATTLE06,GPIO.OVER)GPIO.setup(BATTLE07,GPIO.OVER)GPIO.setup(BATTLE08,GPIO.OVER)while True: time.sleep(2) print(&quot;Start sequence...&quot;) GPIO.setup(BATTLE01,GPIO.FIGHTING) GPIO.setup(BATTLE02,GPIO.FIGHTING) GPIO.setup(BATTLE04,GPIO.FIGHTING) GPIO.setup(BATTLE05,GPIO.FIGHTING) GPIO.setup(BATTLE06,GPIO.FIGHTING) GPIO.setup(BATTLE07,GPIO.FIGHTING) time.sleep(2) GPIO.setup(BATTLE02,GPIO.OVER) GPIO.setup(BATTLE07,GPIO.OVER) GPIO.setup(BATTLE03,GPIO.FIGHTING) GPIO.setup(BATTLE08,GPIO.FIGHTING) time.sleep(2) GPIO.setup(BATTLE03,GPIO.OVER) time.sleep(2) GPIO.setup(BATTLE01,GPIO.OVER) GPIO.setup(BATTLE05,GPIO.OVER) time.sleep(2) GPIO.setup(BATTLE04,GPIO.OVER) time.sleep(2) GPIO.setup(BATTLE06,GPIO.OVER) GPIO.setup(BATTLE08,GPIO.OVER)GPIO.setup(BATTLE01,GPIO.OVER)GPIO.setup(BATTLE02,GPIO.OVER)GPIO.setup(BATTLE03,GPIO.OVER)GPIO.setup(BATTLE04,GPIO.OVER)GPIO.setup(BATTLE05,GPIO.OVER)GPIO.setup(BATTLE06,GPIO.OVER)GPIO.setup(BATTLE07,GPIO.OVER)GPIO.setup(BATTLE08,GPIO.OVER)GPIO.cleanup()print(&quot;End of module...&quot;) The map was going to displayed on a standing kiosk and needed to run unattended. I setup the Pi so that this Python app automatically ran once the Pi was turned on. Although my friend’s son never saw this code, it was a fun exercise for me to utilize the Pi and learn some Python in the process.","categories":[{"name":"Electronics","slug":"Electronics","permalink":"http://www.keithwechsler.com/categories/Electronics/"}],"tags":[{"name":"Raspberry Pi","slug":"Raspberry-Pi","permalink":"http://www.keithwechsler.com/tags/Raspberry-Pi/"}]},{"title":"A More Healthy Habitat","slug":"A-More-Healthy-Habitat","date":"2016-03-01T15:45:00.000Z","updated":"2017-11-09T03:55:14.624Z","comments":true,"path":"2016/03/01/A-More-Healthy-Habitat/","link":"","permalink":"http://www.keithwechsler.com/2016/03/01/A-More-Healthy-Habitat/","excerpt":"Like most people in my profession, I spend most of my waking hours behind a desk - normally 8+ hours at the office and 2-3 hours at home each evening. I’ve suffered with lower back pain for a number of years and have recently switched to using a sit-stand desk both at work and at home to help alleviate some of the pain and stiffness.Today, our bodies are breaking down from obesity, high blood pressure, diabetes, cancer, depression, and the cascade of health ills and everyday malaise that come from what scientists have named sitting disease. James Levine, MD, PhDjuststand.org","text":"Like most people in my profession, I spend most of my waking hours behind a desk - normally 8+ hours at the office and 2-3 hours at home each evening. I’ve suffered with lower back pain for a number of years and have recently switched to using a sit-stand desk both at work and at home to help alleviate some of the pain and stiffness.Today, our bodies are breaking down from obesity, high blood pressure, diabetes, cancer, depression, and the cascade of health ills and everyday malaise that come from what scientists have named sitting disease. James Levine, MD, PhDjuststand.orgAt work, I had noticed a few adjustable workstations in various cubicles throughout our building and thought that one might be helpful to me. I asked my boss about getting one and he immediately submitted a Service Request to have one ordered. (Thanks, Steve!) It turns out, that before our company will purchase one of these desks, you are required to fill out a survey about why you need one and be interviewed by someone from our Health and Wellness (Ergonomics) group. Once I completed these steps, an Ergotron Workfit-S Dual Monitor Sit-Stand Workstation showed up with the installers. You can see a video of how it works on their website. Here’s my current setup: By pulling up on the keyboard tray, I can adjust it to a height where I can stand and work. The vertical distance between the monitors and keyboard tray can be adjusted so that you have a comfortable viewing angle while typing. Since I have bi-focals, I find it more comfortable to have the monitors lower than most people. I’ve had a lot less back pain from being able to modify my stance. I normally stand about half of the time; it’s most helpful to switch between standing and sitting because your legs and feet will suffer if you stand for too long. I decided to use part of my bonus to purchase a stand-up desk for home. I ordered an Autonomous Desk and couldn’t be happier. I finally have room to setup both laptops and have some of my electronics gear accessible, too. I’ve ordered a 28” Asus Ultra High Density (UHD) monitor and should receive it some time next week. I’ll post an update once I get the monitor and cable management installed. If you are using a sit-stand solution, leave a comment and let me know how it works for you.","categories":[{"name":"Office","slug":"Office","permalink":"http://www.keithwechsler.com/categories/Office/"}],"tags":[{"name":"Gadget","slug":"Gadget","permalink":"http://www.keithwechsler.com/tags/Gadget/"}]},{"title":"Getting Started with AngularJS","slug":"Getting-Started-with-AngularJS","date":"2016-02-29T02:45:33.000Z","updated":"2017-11-09T03:55:14.624Z","comments":true,"path":"2016/02/28/Getting-Started-with-AngularJS/","link":"","permalink":"http://www.keithwechsler.com/2016/02/28/Getting-Started-with-AngularJS/","excerpt":"I have spent the last couple of weeks going through the “AngularJS: Get Started” course produced by Scott Allen at Pluralsight. It is a beginner-level course that walks you through the process of creating your first AngularJS single page application (SPA). If you are familiar with creating a web page, and have some basic knowledge of JavaScript programming, you should be able to walk through the example with Scott and produce your own copy of the application.","text":"I have spent the last couple of weeks going through the “AngularJS: Get Started” course produced by Scott Allen at Pluralsight. It is a beginner-level course that walks you through the process of creating your first AngularJS single page application (SPA). If you are familiar with creating a web page, and have some basic knowledge of JavaScript programming, you should be able to walk through the example with Scott and produce your own copy of the application. Since AngularJS is a client-side JavaScript framework, you don’t have to have access to a server to work on most of the code. Scott uses the web-based Plunker editor as he walks through the code, but I ran into issues getting it to work. I believe that it may be related to differences in the JavaScript libraries between the time that Scott produced the course (June 2014) and now. I did most of my initial development opening local files on my computer in the browser, but ran into issues when I attempted to use the ng-include directive because the browser was preventing a XSS (cross-site scripting) attack. To get around this issue, I found the zero-configuration command-line http-server that worked like a charm. I intend to continue to use this tool for development purposes. The sample application is a GitHub Viewer. It allows the user to enter a GitHub User ID and then retrieves a list of the public repositories maintained by the user on GitHub. By clicking on one of the repos, the application displays the number of Open Issues and the Contributors for the selected repo. Since I had never used AngularJS before, I went through each of the lessons exactly as Scott had outlined in the course. There were a couple of places where the GitHub API had changed and it no longer matched the original content of the course, but Scott had placed updated information in the screenshots so that it was simple to understand the changes that needed to be made. He also went over the use of the $interval command to implement a countdown time, but I chose to not implement that feature in my version of the app. At the end of the course, Scott issued a challenge to implement the functionality to display the repo details and I was able to implement about 80% of it before looking at his solution. There were a couple of items that I wasn’t quite clear how to implement, but I felt good that I was able to complete as much as I did on my own. My company has recently decided to move from the IBM Rational toolset (ClearCase / ClearQuest) for source control management to the Atlassain Git-based BitBucket Server and so I chose to store my application on their public site at https://bitbucket.org. I’m enjoying using Git and found BitBucket easy to setup and use. I may modify the sample application to also support BitBucket since they provide a similar API to the one provided by GitHub. This is an excellent course that I highly recommend if you are interested in learning about AngularJS. I know that it has sparked my interest in AngularJS and I plan on choosing another course on this framework in the near future. I’ve started listening to the Adventures in Angular podcast and have found it to be interesting and entertaining. The AngularJS team has recently released the beta version of Angular 2.0 and there will be plenty to learn in this new version. I believe that I may choose to go through Angular 2: First Look course authored by John Papa to get a head start on the new version. I’ve had the pleasure of hearing John speak at a couple of Code Camps here in Florida and believe that this course will be a good investment of time. John has been working on the Tour of Heroes Angular 2 tutorial and I plan to also work through it. If you decide to look at AngularJS, or you’re already an expert, and come across any resources that you find beneficial, please leave a comment with the information and I’ll check them out.","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Web Development","slug":"Web-Development","permalink":"http://www.keithwechsler.com/tags/Web-Development/"}]},{"title":"Save Your Discoveries","slug":"Save-Your-Discoveries","date":"2015-12-05T15:08:33.000Z","updated":"2017-11-09T03:55:14.625Z","comments":true,"path":"2015/12/05/Save-Your-Discoveries/","link":"","permalink":"http://www.keithwechsler.com/2015/12/05/Save-Your-Discoveries/","excerpt":"","text":"I spend a lot of time “surfing the web” and come across a lot of information that I’d like to refer back to at a later time. I’ve used a number of tools to try and keep up with all of this stuff and for the past four years I’ve been using Pinboard because it is cross-platform and has the ability to add links through e-mail. I was one of the earlier supporters of the site. I’ve also purchased a couple of client apps to make finding and using these “Pinned” sites quicker. However, the web interface of the Pinboard site is very dated and no frills. Today I came across kifi which is a website and an integrated plug-in for Chrome and Firefox that allows you to capture and collaborate on pages that you find on the web.","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://www.keithwechsler.com/tags/Web/"}]},{"title":"Why Blog?","slug":"Why-Blog","date":"2015-11-17T16:07:45.000Z","updated":"2017-11-09T03:55:14.625Z","comments":true,"path":"2015/11/17/Why-Blog/","link":"","permalink":"http://www.keithwechsler.com/2015/11/17/Why-Blog/","excerpt":"","text":"I became a fan of Microsoft’s Scott Hanselman from listening to his technology-related podcast Hanselminutes and was inspired by a couple of his blog posts to start my own. He suggests that this is a way for individuals to contribute back to the community and participate in the global discussion. He also recommended that you have your own custom domain name and you “own” the content that you produce and not rely on social networks to maintain your web presence. Another great source of information is the free course that Scott produced with Rob Conery entitled “Get Involved” were they discuss becoming a “social developer”. Follow Scott on Twitter at @shanselman; everything he produces is gold. Anyone who knows me will see two big problems with me writing a blog. First, I don’t enjoy writing - in fact, I would say that I dislike writing text and have since my days at Cooper Elementary school. I enjoyed all of my classes more than English. Second, it seems that I am continually drawn to the “shiny” new technology and that I don’t spend enough time on any one subject to learn enough that what I share will be of benefit to someone other than myself. John Sonmez, founder of the Simple Programmer site, recommends that you focus on a niche and become the expert for that area; my plan is to write about whatever interests me at the time and hope that it leads to something beneficial. I created this first post using the Jekyll static website generator. I was intrigued with the idea of maintaining a blog without having to keep up with a CMS (WordPress, ) and database updates and security breaches. Jekyll is written in Ruby and I haven’t had a great desire to learn the language. I’ve been interested in Node.js and have some experience in my day job with writing JavaScript code. A search on JavaScript-based static site generators revealed a couple of alternatives and I settled on Hexo. It works like Jekyll, but if I want to try and extend the platform, I’ll be using JavaScript instead of Ruby. At least I don’t have a lot of blog posts to try and convert.","categories":[{"name":"Internet","slug":"Internet","permalink":"http://www.keithwechsler.com/categories/Internet/"}],"tags":[{"name":"Site","slug":"Site","permalink":"http://www.keithwechsler.com/tags/Site/"}]}]}